name: Tests

on:
  push:
    branches: ["main", "update_ci"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        c_compiler: [gcc, clang, cl]
        libtype: [static]
        include:
          - os: windows-latest
            c_compiler: cl
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: clang
        exclude:
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Install Ninja (Ubuntu)
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.c_compiler != 'cl' }}
      run: sudo apt-get update && sudo apt-get install -y ninja-build

    - name: Install Ninja (macOS)
      if: ${{ matrix.os == 'macos-latest' && matrix.c_compiler != 'cl' }}
      run: brew install ninja

    - name: Install LLVM + Ninja (Windows Clang)
      if: ${{ matrix.os == 'windows-latest' && matrix.c_compiler == 'clang' }}
      shell: pwsh
      run: |
        choco install -y llvm ninja
        "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Configure CMake (MSVC)
      if: ${{ matrix.c_compiler == 'cl' }}
      shell: pwsh
      run: |
        cmake -B "${{ github.workspace }}/build-${{ matrix.libtype }}" `
              -DCMAKE_C_COMPILER=cl `
              -DCMAKE_BUILD_TYPE=Release `
              -DBUILD_SHARED_LIBS=OFF `
              -S "${{ github.workspace }}"

    - name: Configure CMake (Ninja: gcc/clang)
      if: ${{ matrix.c_compiler != 'cl' }}
      run: |
        cmake -G Ninja \
              -B "${{ github.workspace }}/build-${{ matrix.libtype }}" \
              -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=OFF \
              -S "${{ github.workspace }}"

    - name: Build
      run: cmake --build "${{ github.workspace }}/build-${{ matrix.libtype }}" --config Release

    - name: Test
      working-directory: ${{ github.workspace }}/build-${{ matrix.libtype }}
      run: ctest --build-config Release --output-on-failure
